"""add document related tables

Revision ID: 2e9e85e8b1f8
Revises: 851634203bde
Create Date: 2024-10-23 22:02:57.080936

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '2e9e85e8b1f8'
down_revision: Union[str, None] = '851634203bde'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('doc_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('raw_content', sa.LargeBinary(), nullable=True),
    sa.Column('authors', sa.JSON(), nullable=True),
    sa.Column('doi', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content_hash', sa.Integer(), nullable=True),
    sa.Column('corpus_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sources', sa.JSON(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sourced_date', sa.DateTime(), nullable=True),
    sa.Column('revision_date', sa.DateTime(), nullable=True),
    sa.Column('references', sa.JSON(), nullable=True),
    sa.Column('generated_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('doc_id')
    )
    op.create_table('document_chunks',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('doc_id', sa.Uuid(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=True),
    sa.Column('content', sa.LargeBinary(), nullable=True),
    sa.Column('media_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('token_offset_position', sa.Integer(), nullable=True),
    sa.Column('generated_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['documents.doc_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_tags',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('doc_id', sa.Uuid(), nullable=False),
    sa.Column('generated', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['doc_id'], ['documents.doc_id'], ),
    sa.PrimaryKeyConstraint('doc_id', 'value', 'generated')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document_tags')
    op.drop_table('document_chunks')
    op.drop_table('documents')
    # ### end Alembic commands ###
